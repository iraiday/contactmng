{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/textInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/notFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","con","id","payload","map","Provider","dispatch","setState","axios","get","resp","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","contact","className","name","onClick","style","cursor","bind","float","color","to","marginRight","email","phone","Contacts","Fragment","key","Header","branding","defaultProps","About","TestInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","uuid","post","res","history","push","EditContact","updateContact","match","params","put","notFound","Test","title","body","fetch","then","response","json","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.69cdf7dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((con) => con.id !== action.payload),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((con) =>\r\n          con.id === action.payload.id ? (con = action.payload) : con\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  async componentDidMount() {\r\n    const resp = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: resp.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropType from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-caret-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n                <Link to={`/contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropType.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact}></Contact>\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropType from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-dark navbar-expand-sm bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.branding}\r\n        </Link>\r\n\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              <i className=\"fas fa-home\"></i>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/contact/add\">\r\n              <i className=\"fas fa-plus\"></i>\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">\r\n              <i className=\"fas fa-question\"></i>\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropType.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Maneger</h1>\r\n      <p className=\"lead\">Simple app to manege contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nconst TestInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTestInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTestInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TestInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TestInputGroup from \"../layout/textInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n      errors: {},\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TestInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  ></TestInputGroup>\r\n\r\n                  <TestInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  ></TestInputGroup>\r\n\r\n                  <TestInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  ></TestInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TestInputGroup from \"../layout/textInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TestInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  ></TestInputGroup>\r\n\r\n                  <TestInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  ></TestInputGroup>\r\n\r\n                  <TestInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  ></TestInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default function notFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = { title: \"\", body: \"\" };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((json) =>\r\n        this.setState({ title: json.title, body: json.body })\r\n      );\r\n  }\r\n  /*componentWillMount() {\r\n    console.log(\"componentWillMount\");\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"componentDidUpdate\");\r\n  }\r\n  componentWillReceiveProps(nextprops, nextState) {\r\n    console.log(\"componentWillReceiveProps\");\r\n  }*/\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\nimport NotFound from \"./components/pages/notFound\";\r\nimport Test from \"./components/test/Test\";\r\nimport { Provider } from \"./context\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header></Header>\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Contacts}></Route>\r\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\r\n              <Route\r\n                exact\r\n                path=\"/contact/edit/:id\"\r\n                component={EditContact}\r\n              ></Route>\r\n              <Route exact path=\"/about\" component={About}></Route>\r\n              <Route exact path=\"/test\" component={Test}></Route>\r\n              <Route component={NotFound}></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}